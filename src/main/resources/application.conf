akka {
  loggers=["org.dolphineor.akkalog4j.Log4jLogger"]
  loglevel=debug
  log-dead-letters=off

  actor {
    provider="akka.cluster.ClusterActorRefProvider"
  }

  cluster {
    auto-down-unreachable-after=1 s
    seed-nodes=["akka.tcp://reactive-flow-system@"${reactive-flow.interface}":2551"]
  }

  extensions=["akka.contrib.datareplication.DataReplication"]

  persistence {
    journal {
      plugin="akka.persistence.journal.leveldb-shared"

      leveldb-shared.store {
        dir=${java.io.tmpdir}"/shared-journal"
        native=off
      }
    }
  }

  remote {
    enabled-transports=["akka.remote.netty.tcp"]
    log-remote-lifecycle-events=error

    netty.tcp {
      hostname=${reactive-flow.interface}
      port=2551
    }
  }
}

reactive-flow {
  interface="127.0.0.1"
  interface=${?HOSTNAME}

  flow-event-publisher {
    buffer-size=100
  }

  flow-facade {
    shard-count=20
  }

  http-service {
    flow-facade-timeout=250 ms
    interface=${reactive-flow.interface}
    port=9000
    self-timeout=100 ms
  }

  message-event-publisher {
    buffer-size=100
  }
}